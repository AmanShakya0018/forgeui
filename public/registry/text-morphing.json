{
  "name": "text-morphing",
  "type": "registry:ui",
  "files": [
    {
      "path": "components/ui/text-morphing.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface GooeyTextProps {\n  texts: string[];\n  morphTime?: number;\n  cooldownTime?: number;\n  className?: string;\n  textClassName?: string;\n}\n\nfunction TextMorphing() {\n  return (\n    <div className=\"h-[200px] flex items-center justify-center\">\n      <GooeyText\n        texts={[\"ForgeUI\", \"Is\", \"Awesome\"]}\n        morphTime={1}\n        cooldownTime={0.25}\n        className=\"font-bold\"\n      />\n    </div>\n  );\n}\n\nexport default TextMorphing;\n\nexport function GooeyText({\n  texts,\n  morphTime = 1,\n  cooldownTime = 0.25,\n  className,\n  textClassName\n}: GooeyTextProps) {\n  const text1Ref = React.useRef<HTMLSpanElement>(null);\n  const text2Ref = React.useRef<HTMLSpanElement>(null);\n\n  React.useEffect(() => {\n    let textIndex = texts.length - 1;\n    let time = new Date();\n    let morph = 0;\n    let cooldown = cooldownTime;\n\n    const setMorph = (fraction: number) => {\n      if (text1Ref.current && text2Ref.current) {\n        text2Ref.current.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;\n        text2Ref.current.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;\n\n        fraction = 1 - fraction;\n        text1Ref.current.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;\n        text1Ref.current.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;\n      }\n    };\n\n    const doCooldown = () => {\n      morph = 0;\n      if (text1Ref.current && text2Ref.current) {\n        text2Ref.current.style.filter = \"\";\n        text2Ref.current.style.opacity = \"100%\";\n        text1Ref.current.style.filter = \"\";\n        text1Ref.current.style.opacity = \"0%\";\n      }\n    };\n\n    const doMorph = () => {\n      morph -= cooldown;\n      cooldown = 0;\n      let fraction = morph / morphTime;\n\n      if (fraction > 1) {\n        cooldown = cooldownTime;\n        fraction = 1;\n      }\n\n      setMorph(fraction);\n    };\n\n    function animate() {\n      requestAnimationFrame(animate);\n      const newTime = new Date();\n      const shouldIncrementIndex = cooldown > 0;\n      const dt = (newTime.getTime() - time.getTime()) / 1000;\n      time = newTime;\n\n      cooldown -= dt;\n\n      if (cooldown <= 0) {\n        if (shouldIncrementIndex) {\n          textIndex = (textIndex + 1) % texts.length;\n          if (text1Ref.current && text2Ref.current) {\n            text1Ref.current.textContent = texts[textIndex % texts.length];\n            text2Ref.current.textContent = texts[(textIndex + 1) % texts.length];\n          }\n        }\n        doMorph();\n      } else {\n        doCooldown();\n      }\n    }\n\n    animate();\n\n    return () => {\n      // Cleanup function if needed\n    };\n  }, [texts, morphTime, cooldownTime]);\n\n  return (\n    <div className={cn(\"relative\", className)}>\n      <svg className=\"absolute h-0 w-0\" aria-hidden=\"true\" focusable=\"false\">\n        <defs>\n          <filter id=\"threshold\">\n            <feColorMatrix\n              in=\"SourceGraphic\"\n              type=\"matrix\"\n              values=\"1 0 0 0 0\n                      0 1 0 0 0\n                      0 0 1 0 0\n                      0 0 0 255 -140\"\n            />\n          </filter>\n        </defs>\n      </svg>\n\n      <div\n        className=\"flex items-center justify-center\"\n        style={{ filter: \"url(#threshold)\" }}\n      >\n        <span\n          ref={text1Ref}\n          className={cn(\n            \"absolute inline-block select-none text-center text-6xl md:text-[60pt]\",\n            \"text-foreground\",\n            textClassName\n          )}\n        />\n        <span\n          ref={text2Ref}\n          className={cn(\n            \"absolute inline-block select-none text-center text-6xl md:text-[60pt]\",\n            \"text-foreground\",\n            textClassName\n          )}\n        />\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ui/text-morphing.tsx"
    }
  ],
  "author": "Aman Shakya <hi@amanshakya.in>",
  "title": "Text Morphing"
}
