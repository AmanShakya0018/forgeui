{
  "name": "fraud-card",
  "type": "registry:ui",
  "dependencies": ["@tabler/icons-react", "motion"],
  "files": [
    {
      "path": "components/forgeui/fraud-card.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { IconCircleDotted, IconPointFilled, IconX } from \"@tabler/icons-react\";\nimport { motion, useInView, Variants } from \"motion/react\";\nimport { useRef, useState, useEffect } from \"react\";\n\ntype BlockedEmail = {\n  email: string;\n  time: string;\n};\n\ntype FraudCardProps = {\n  blockedEmails: BlockedEmail[];\n};\n\nconst FraudCard = ({ blockedEmails }: FraudCardProps) => {\n  const [hovered, setHovered] = useState(false);\n  const [isTouchDevice, setIsTouchDevice] = useState(false);\n  const ref = useRef(null);\n\n  const isInView = useInView(ref, {\n    once: false,\n    margin: \"-200px\",\n  });\n\n  useEffect(() => {\n    const checkTouchDevice = () => {\n      setIsTouchDevice(\n        \"ontouchstart\" in window || navigator.maxTouchPoints > 0,\n      );\n    };\n\n    checkTouchDevice();\n    window.addEventListener(\"resize\", checkTouchDevice);\n\n    return () => window.removeEventListener(\"resize\", checkTouchDevice);\n  }, []);\n\n  const shouldAnimate = isTouchDevice ? isInView : hovered;\n\n  const parentvariant = {\n    open: {\n      transition: {\n        staggerChildren: 0.08,\n        delayChildren: 0.15,\n      },\n    },\n    close: {\n      transition: {\n        staggerChildren: 0.075,\n        delayChildren: 0.15,\n      },\n    },\n  };\n\n  const emailvariant = {\n    open: {\n      opacity: 1,\n      filter: \"blur(0px)\",\n      y: 0,\n      transition: { duration: 0.3 },\n    },\n    close: {\n      opacity: 0,\n      filter: \"blur(10px)\",\n      y: 5,\n      transition: { duration: 0.3 },\n    },\n  };\n\n  const iconvariant = {\n    open: {\n      opacity: 1,\n      scale: 1,\n      transition: { duration: 0.3 },\n    },\n    close: {\n      opacity: 0,\n      scale: 0.85,\n      transition: { duration: 0.3 },\n    },\n  };\n\n  const timevariant = {\n    open: {\n      opacity: 1,\n      filter: \"blur(0px)\",\n      y: 0,\n      transition: { duration: 0.3 },\n    },\n    close: {\n      opacity: 0,\n      filter: \"blur(5px)\",\n      y: 10,\n      transition: { duration: 0.3 },\n    },\n  };\n\n  const circlevariant: Variants = {\n    open: {\n      rotate: 360,\n      transition: {\n        ease: \"linear\",\n        duration: 2.5,\n        repeat: Number.POSITIVE_INFINITY,\n      },\n    },\n    close: {\n      rotate: 0,\n      transition: {\n        ease: \"easeInOut\",\n        duration: 0.1,\n        repeat: 0,\n      },\n    },\n  };\n\n  return (\n    <motion.div\n      ref={ref}\n      onHoverStart={() => !isTouchDevice && setHovered(true)}\n      onHoverEnd={() => !isTouchDevice && setHovered(false)}\n      variants={parentvariant}\n      animate={shouldAnimate ? \"open\" : \"close\"}\n      initial=\"close\"\n      className={cn(\n        \"h-[34rem] min-h-[34rem] w-[350px] max-w-[350px]\",\n        \"group overflow-hidden border border-neutral-800\",\n        \"clbeam-container relative flex flex-col\",\n        \"rounded-md bg-neutral-900 p-4 text-white\",\n        shouldAnimate && \"animate-active\",\n      )}\n    >\n      <div className=\"absolute inset-0 hidden h-full w-full [@media(min-width:400px)]:block\">\n        <svg className=\"h-full w-full\" width=\"100%\" height=\"100%\" viewBox=\"0 0 90 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g stroke=\"#535353\" strokeWidth=\"0.2\" pathLength=\"105\" strokeDasharray=\"105\">\n            <path d=\"M 13 0 v 8 l 9.9 9.2 v 80\" />\n            <animate attributeName=\"stroke-dashoffset\" from=\"105\" to=\"0\" dur=\"1s\" fill=\"freeze\" calcMode=\"spline\" keySplines=\"0.25,0.1,0.5,1\" keyTimes=\"0; 1\" />\n          </g>\n          <g mask=\"url(#clbeam-mask-1)\">\n            <circle className=\"clbeam clbeam-line-1\" cx=\"0\" cy=\"0\" r=\"15\" fill=\"url(#clbeam-red-grad)\" />\n          </g>\n          <defs>\n            <mask id=\"clbeam-mask-1\">\n              <path d=\"M 13 0 v 8 l 9.9 9.2 v 80\" stroke=\"white\" strokeWidth=\"0.3\" />\n            </mask>\n            <radialGradient id=\"clbeam-red-grad\" fx=\"1\">\n              <stop offset=\"0%\" stopColor=\"#ef4444\" />\n              <stop offset=\"100%\" stopColor=\"transparent\" />\n            </radialGradient>\n          </defs>\n        </svg>\n      </div>\n      <div className=\"flex flex-col gap-2\">\n        <h2 className=\"text-[14px] font-bold\">Email Security Enhancements</h2>\n        <p className=\"text-[11px] text-neutral-500 sm:text-xs\">\n          Improve account integrity and reduce fake registrations by identifying\n          temporary inboxes and filtering suspicious patterns in email addresses\n          used.\n        </p>\n      </div>\n      <div className=\"mt-8 px-3 py-3\">\n        <div className=\"relative z-[10] flex items-center justify-center gap-2 rounded-[6px] bg-black p-0.5\">\n          <div className=\"flex h-full w-full items-center justify-between gap-3 rounded-[4px] bg-neutral-800 p-3\">\n            <div className=\"flex items-center justify-center gap-4\">\n              <motion.div variants={circlevariant} className=\"h-4 w-4\">\n                <IconCircleDotted className=\"h-full w-full text-white\" />\n              </motion.div>\n              <p className=\"font-mono text-[10px] text-neutral-400 transition-all duration-300 group-hover:text-neutral-100\">\n                Malicious email activity flagged\n              </p>\n            </div>\n            <p className=\"text-[10px] text-neutral-500\">\n              {new Date().toLocaleTimeString([], {\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n                hour12: false,\n              })}\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className=\"relative mx-4 my-4 flex-1\">\n        <div className=\"absolute -inset-y-8 inset-x-5 block h-[25rem] w-[0.5px] bg-[#535353] [@media(min-width:400px)]:hidden\" />\n        <div className=\"absolute inset-0 -ml-4 flex h-full w-full flex-col items-center justify-center gap-5 p-2 [@media(min-width:400px)]:ml-5\">\n          {blockedEmails.map(({ email, time }) => (\n            <div key={email} className=\"ml-4 flex h-full w-full justify-start gap-2 p-2\">\n              <div className=\"relative mr-2 mt-1.5 h-6 w-6\">\n                <div className=\"absolute inset-0 flex items-center justify-center rounded-full bg-white/10\">\n                  <IconPointFilled className=\"h-3 w-3 text-neutral-500\" />\n                </div>\n                <motion.div variants={iconvariant} className=\"absolute inset-0 flex items-center justify-center rounded-full bg-red-500 p-1\">\n                  <IconX className=\"h-4 w-4 text-neutral-800\" />\n                </motion.div>\n              </div>\n              <div className=\"flex flex-col items-start justify-center gap-1 p-1\">\n                <motion.h2 variants={emailvariant} className=\"text-[10px] font-semibold text-neutral-200 sm:text-xs\">\n                  {email}\n                </motion.h2>\n                <motion.p variants={timevariant} className=\"font-mono text-[9px] text-neutral-500\">\n                  Blocked {time}\n                </motion.p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default FraudCard;",
      "type": "registry:ui",
      "target": "components/forgeui/fraud-card.tsx"
    }
  ],
  "author": "Aman Shakya <hi@amanshakya.in>",
  "title": "Fraud Card"
}
