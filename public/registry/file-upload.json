{
  "name": "file-upload",
  "type": "registry:ui",
  "files": [
    {
      "path": "components/forgeui/file-upload.tsx",
      "content": "\"use client\"\n\nimport { cn } from \"@/lib/utils\";\nimport React, { useRef, useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { Upload, FileIcon, XIcon } from 'lucide-react';\nimport { useDropzone } from \"react-dropzone\";\n\nconst mainVariant = {\n  initial: { scale: 1, y: 0 },\n  animate: { scale: 1.02, y: -5 },\n};\n\nconst containerVariant = {\n  initial: { opacity: 0, y: 20 },\n  animate: { opacity: 1, y: 0 },\n  exit: { opacity: 0, y: -20 }\n};\n\nconst FileUpload = ({\n  onChange,\n  maxFiles = 5,\n  accept = {},\n}: {\n  onChange?: (files: File[]) => void;\n  maxFiles?: number;\n  accept?: Record<string, string[]>;\n}) => {\n  const [files, setFiles] = useState<File[]>([]);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const handleFileChange = (newFiles: File[]) => {\n    const updatedFiles = [...files, ...newFiles].slice(0, maxFiles);\n    setFiles(updatedFiles);\n    if (onChange) onChange(updatedFiles);\n  };\n\n  const removeFile = (index: number) => {\n    const updatedFiles = files.filter((_, idx) => idx !== index);\n    setFiles(updatedFiles);\n    if (onChange) onChange(updatedFiles);\n  };\n\n  const handleClick = () => {\n    fileInputRef.current?.click();\n  };\n\n  const { getRootProps, isDragActive } = useDropzone({\n    multiple: true,\n    maxFiles,\n    accept,\n    noClick: true,\n    onDrop: handleFileChange,\n    onDropRejected: (error) => {\n      console.log(error);\n    },\n  });\n\n  return (\n    <div className=\"w-full\" {...getRootProps()}>\n      <motion.div\n        onClick={handleClick}\n        whileHover=\"animate\"\n        initial=\"initial\"\n        animate=\"initial\"\n        variants={mainVariant}\n        transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n        className={cn(\n          \"p-10 group/file block rounded-lg cursor-pointer w-full relative overflow-hidden\",\n          \"bg-gradient-to-br from-white to-gray-50 dark:from-neutral-900 dark:to-neutral-950\",\n          \"border-2 border-dashed transition-colors\",\n          isDragActive\n            ? \"border-emerald-400 bg-emerald-50/10\"\n            : \"border-gray-200 hover:border-emerald-400/70 dark:border-neutral-800 dark:hover:border-emerald-400/70\",\n        )}\n      >\n        <input\n          ref={fileInputRef}\n          id=\"file-upload-handle\"\n          type=\"file\"\n          multiple\n          onChange={(e) => handleFileChange(Array.from(e.target.files || []))}\n          className=\"hidden\"\n          accept={Object.entries(accept)\n            .map(([key, values]) => values.map((value) => `${key}/${value}`))\n            .flat()\n            .join(\",\")}\n        />\n\n        <div className=\"absolute inset-0 [mask-image:radial-gradient(ellipse_at_center,white,transparent)]\">\n          <div className=\"flex bg-gray-100 dark:bg-neutral-900 flex-shrink-0 flex-wrap justify-center items-center gap-x-px gap-y-px scale-105\">\n            {Array.from({ length: 10 }).map((_, row) =>\n              Array.from({ length: 40 }).map((_, col) => {\n                return (\n                  <div\n                    key={`${col}-${row}`}\n                    className={`w-10 h-10 flex flex-shrink-0 rounded-[2px] bg-gray-50 dark:bg-neutral-950`}\n                  />\n                );\n              })\n            )}\n          </div>\n        </div>\n\n        <div className=\"flex flex-col items-center justify-center relative z-10\">\n          <motion.div\n            initial={{ scale: 1 }}\n            animate={{ scale: isDragActive ? 1.1 : 1 }}\n            transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n            className=\"mb-6\"\n          >\n            <div className={cn(\n              \"p-4 rounded-full\",\n              \"bg-gradient-to-br from-emerald-400/20 to-emerald-300/10 dark:from-emerald-400/30 dark:to-emerald-300/20\",\n              \"group-hover/file:from-emerald-400/30 group-hover/file:to-emerald-300/20\",\n              \"transition-all duration-300\"\n            )}>\n              <Upload className=\"h-8 w-8 text-emerald-500 dark:text-emerald-400\" />\n            </div>\n          </motion.div>\n\n          <h3 className=\"font-sans font-semibold text-neutral-800 dark:text-neutral-200 text-lg\">\n            {isDragActive ? \"Drop files here\" : \"Upload files\"}\n          </h3>\n          <p className=\"font-sans text-neutral-500 dark:text-neutral-400 text-sm mt-2 text-center max-w-sm\">\n            Drag and drop your files here, or click to browse.\n            {maxFiles > 1 && ` Upload up to ${maxFiles} files.`}\n          </p>\n\n          <AnimatePresence>\n            {files.length > 0 && (\n              <motion.div\n                variants={containerVariant}\n                initial=\"initial\"\n                animate=\"animate\"\n                exit=\"exit\"\n                className=\"w-full mt-8 space-y-3 max-w-2xl mx-auto\"\n              >\n                {files.map((file, idx) => (\n                  <motion.div\n                    key={`file-${idx}`}\n                    layout\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ delay: idx * 0.1 }}\n                    className={cn(\n                      \"relative group overflow-hidden z-40\",\n                      \"bg-white dark:bg-neutral-900/50\",\n                      \"backdrop-blur-sm\",\n                      \"flex items-center gap-4 p-4 rounded-lg\",\n                      \"border border-gray-100 dark:border-neutral-800\",\n                      \"hover:border-emerald-400/20 dark:hover:border-emerald-400/20\",\n                      \"transition-all duration-300\"\n                    )}\n                  >\n                    <div className=\"p-2 rounded-lg bg-emerald-400/10 dark:bg-emerald-400/20\">\n                      <FileIcon className=\"h-5 w-5 text-emerald-500 dark:text-emerald-400\" />\n                    </div>\n\n                    <div className=\"flex-1 min-w-0\">\n                      <p className=\"text-sm font-medium text-neutral-800 dark:text-neutral-200 truncate\">\n                        {file.name}\n                      </p>\n                      <div className=\"flex items-center gap-3 text-xs text-neutral-500 dark:text-neutral-400 mt-1\">\n                        <span className=\"rounded-full px-2 py-0.5 bg-neutral-100 dark:bg-neutral-800\">\n                          {(file.size / (1024 * 1024)).toFixed(2)} MB\n                        </span>\n                        <span>{file.type || 'Unknown type'}</span>\n                      </div>\n                    </div>\n\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        removeFile(idx);\n                      }}\n                      className={cn(\n                        \"p-1.5 rounded-full\",\n                        \"opacity-0 group-hover:opacity-100\",\n                        \"bg-neutral-100 hover:bg-neutral-200\",\n                        \"dark:bg-neutral-800 dark:hover:bg-neutral-700\",\n                        \"transition-all duration-200\"\n                      )}\n                    >\n                      <XIcon className=\"h-4 w-4 text-neutral-500 dark:text-neutral-400\" />\n                    </button>\n                  </motion.div>\n                ))}\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default FileUpload;\n",
      "type": "registry:ui",
      "target": "components/forgeui/file-upload.tsx"
    }
  ],
  "author": "Aman Shakya <hi@amanshakya.in>",
  "title": "File Upload"
}
